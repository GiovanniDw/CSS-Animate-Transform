/* perspective-origin values (unique per example) */
.potl {
  perspective-origin: 0% 0%;
  transition-duration: 500ms;
   /* animation-name: spinner;  */
  animation-timing-function: linear; 
  animation-iteration-count: infinite; 
  animation-duration: 4s; 
}
.potl :hover {
perspective-origin: center;

}
.potm {
  perspective-origin: top;
}
.potr {
  perspective-origin: top right;
}
.poml {
  perspective-origin: left;
}
.pomm {
  perspective-origin: 50% 50%;
}
.pomr {
  perspective-origin: right;
}
.pobl {
  perspective-origin: bottom left;
}
.pobm {
  perspective-origin: bottom;
}
.pobr {
  perspective-origin: bottom right;
}
.po200200neg {
  perspective-origin: -200% -200%;
}
.po200200pos {
  perspective-origin: 200% 200%;
}
.po200200 {

  transition-duration: 500ms;
  perspective-origin: 50% 50%;
}

.po200200:hover {
perspective-origin: -200% -100%;

}

/* Define the container div, the cube div, and a generic face */
.container {
  width: 100px;
  height: 100px;
  margin: 24px;
  border: none;
}

.cube {
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  perspective: 300px;
  transform-style: preserve-3d;
  transform: rotate3d(0, 0, 0, 0deg);
  transition-duration: 1000ms;
  /* animation-name: spinner;  */
  animation-timing-function: linear; 
  animation-iteration-count: infinite; 
  animation-duration: 4s; 
  
}

.cube:hover {
  perspective-origin: 120% 120%;

  }

.face {
  display: block;
  position: absolute;
  width: 100px;
  height: 100px;
  border: none;
  line-height: 100px;
  font-family: sans-serif;
  font-size: 60px;
  color: white;
  text-align: center;
    background-size: cover;

}

/* Define each face based on direction */
.front {
  /* background: rgba(0, 0, 0, 0.3); */
  transform: translateZ(50px);
  background-image: url(./images/top.png);
  background-size: cover;
  /* height: 100px; */
  /* width: 100px; */

}
.back {
  /* background: rgba(0, 255, 0, 1); */
  color: black;
  background: url(./images/bottom.png);
  transform: rotateY(180deg) translateZ(50px);
  background-size: cover;
}
.right {
  background-image: url(./images/Side.png);
  /* background: rgba(196, 0, 0, 0.7); */
  transform: rotateY(90deg) translateZ(50px);
  background-size: cover;
}
.left {
  background: rgba(0, 0, 196, 0.7);
  transform: rotateY(-90deg) translateZ(50px);
  background-image: url(./images/Side.png);
    /* background-image: url(./images/cube-2.png); */
  background-size: cover;
}
.top {
  background: rgba(196, 196, 0, 0.7);
  transform: rotateX(90deg) translateZ(50px);
  background-image: url(./images/Side.png);
  /* background-image: url(./images/cube-3.png); */
  background-size: cover;
}
.bottom {
  background: rgba(196, 0, 196, 0.7);
  background-image: url(./images/Side.png);
  transform: rotateX(-90deg) translateZ(50px);
  background-size: cover;
}

/* Make the layout a little nicer */
section {
  background-color: #eee;
  padding: 10px;
  font-family: sans-serif;
  text-align: left;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}


@-webkit-keyframes spinner { 
  from 
  { 
    -webkit-transform: rotateY(0deg); 
  } 
  to { 
    -webkit-transform: rotateY(-360deg); 
  } 
} 
/* all other browsers */ 
@keyframes spinner { 
   from { 
    -moz-transform: rotateY(0deg); 
    -ms-transform: rotateY(0deg); 
    transform: rotateY(0deg); 
   } 
   to 
   { 
    -moz-transform: rotateY(-360deg); 
    -ms-transform: rotateY(-360deg); 
    transform: rotateY(-360deg); 

   } 
}